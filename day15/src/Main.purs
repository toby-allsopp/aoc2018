module Main where

import Prelude

import Day15 as Day15
import Effect (Effect)
import Effect.Console (log)
import Data.Either (Either(..))
import Data.Foldable (foldMap)

input :: String
input = """################################
##############.#.#...G.#########
##############.........#########
##############...#.#...#########
##############.##..#...#########
##############..........########
#############.......G...########
############G............#######
############..#G...G.....#######
#############.##.G.G.#..########
###############......##.########
#######.##G...........##########
######..G.....#####...##########
#####...#....#######..##########
#####G......#########.##########
#####.G.....#########.##########
#######..#G.#########E######..##
#.######....#########....###...#
#..G####...E#########....###..##
#.....#G.....#######.........###
##....#.......#####..........###
##.......E#........E.........###
#....G.G........#E........E.####
#........#.......E...##....#####
#........###..G............#####
##G......##......#.E......######
##.#.........##..........#######
#G.#...#G.....#.........##.#####
#####..#......#.#.....#...E#####
########........#....###.....#.#
########.........#E..#####.#...#
################################"""

main :: Effect Unit
main = do
  case Day15.parseMap input of
    Right { map, units } -> log $ show $ Day15.outcome $ Day15.battle map units
    Left msg -> log msg